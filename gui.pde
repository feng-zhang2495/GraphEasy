/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

synchronized public void win_draw1(PApplet appc, GWinData data) { //_CODE_:window1:214566:
  appc.background(230);
} //_CODE_:window1:214566:

public void equationFieldChanged(GTextField source, GEvent event) { //_CODE_:equationField:202076:
  println("equationField - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:equationField:202076:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  window1 = GWindow.getWindow(this, "Window title", 0, 0, 400, 400, JAVA2D);
  window1.noLoop();
  window1.setActionOnClose(G4P.KEEP_OPEN);
  window1.addDrawHandler(this, "win_draw1");
  equationField = new GTextField(window1, 20, 70, 120, 20, G4P.SCROLLBARS_NONE);
  equationField.setPromptText("Equation");
  equationField.setOpaque(false);
  equationField.addEventHandler(this, "equationFieldChanged");
  equationLabel = new GLabel(window1, 40, 40, 80, 20);
  equationLabel.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  equationLabel.setText("Equation");
  equationLabel.setOpaque(true);
  window1.loop();
}

// Variable declarations 
// autogenerated do not edit
GWindow window1;
GTextField equationField; 
GLabel equationLabel; 
